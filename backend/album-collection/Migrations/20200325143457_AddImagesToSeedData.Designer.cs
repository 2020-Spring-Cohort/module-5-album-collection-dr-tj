// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using album_collection;

namespace album_collection.Migrations
{
    [DbContext(typeof(MusicApiContext))]
    [Migration("20200325143457_AddImagesToSeedData")]
    partial class AddImagesToSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("album_collection.Models.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecordLabel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            Image = "./doc/img/Movingpictures.jpg",
                            RecordLabel = "Anthem",
                            Title = "Moving Pictures"
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 2,
                            Image = "./docs/img/QueenANightAtTheOpera.png",
                            RecordLabel = "EMI Records",
                            Title = "A Night at the Opera"
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 3,
                            Image = "./docs/img/TheSign.jpg",
                            RecordLabel = "Arista",
                            Title = "The Sign"
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 4,
                            Image = "./docs/img/Turntheradiooff.jpg",
                            RecordLabel = "Mojo",
                            Title = "Turn the Radio Off"
                        });
                });

            modelBuilder.Entity("album_collection.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Genre = "Rock",
                            Image = "./docs/img/Rush.jpg",
                            Name = "Rush"
                        },
                        new
                        {
                            Id = 2,
                            Genre = "Rock",
                            Image = "./docs/img/Queen.jpg",
                            Name = "Queen"
                        },
                        new
                        {
                            Id = 3,
                            Genre = "Pop",
                            Image = "./docs/img/Aceofbase.jpg",
                            Name = "Ace of Base"
                        },
                        new
                        {
                            Id = 4,
                            Genre = "Ska",
                            Image = "./doc/img/Reelbigfish.jpg",
                            Name = "Reel Big Fish"
                        });
                });

            modelBuilder.Entity("album_collection.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Songs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumId = 1,
                            Duration = "4:34",
                            Title = "Tom Sawyer"
                        },
                        new
                        {
                            Id = 2,
                            AlbumId = 1,
                            Duration = "4:26",
                            Title = "YYZ"
                        },
                        new
                        {
                            Id = 3,
                            AlbumId = 2,
                            Duration = "5:55",
                            Title = "Behemian Rhapsody"
                        },
                        new
                        {
                            Id = 4,
                            AlbumId = 2,
                            Duration = "2:52",
                            Title = "You're My Best Friend"
                        },
                        new
                        {
                            Id = 5,
                            AlbumId = 3,
                            Duration = "3:30",
                            Title = "All That She Wants"
                        },
                        new
                        {
                            Id = 6,
                            AlbumId = 3,
                            Duration = "3:08",
                            Title = "The Sign"
                        },
                        new
                        {
                            Id = 7,
                            AlbumId = 4,
                            Duration = "3:47",
                            Title = "Sell Out"
                        },
                        new
                        {
                            Id = 8,
                            AlbumId = 4,
                            Duration = "3:30",
                            Title = "Beer"
                        });
                });

            modelBuilder.Entity("album_collection.Models.Album", b =>
                {
                    b.HasOne("album_collection.Models.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("album_collection.Models.Song", b =>
                {
                    b.HasOne("album_collection.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
